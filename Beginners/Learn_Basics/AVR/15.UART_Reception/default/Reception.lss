
Reception.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001d0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000003e  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000557  00000000  00000000  00000282  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000018c  00000000  00000000  000007d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000040a  00000000  00000000  00000965  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000060  00000000  00000000  00000d70  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000c9  00000000  00000000  00000dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001c6  00000000  00000000  00000e99  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000060  00000000  00000000  0000105f  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ed       	ldi	r30, 0xD0	; 208
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:
void trans(char);
char rec();
void cmd(int);
void data(char);
void main()
{
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	87 bb       	out	0x17, r24	; 23
	char a;
	DDRB=0XFF;
	DDRC=0XFF;
  96:	84 bb       	out	0x14, r24	; 20
	DDRD=0XF2;
  98:	82 ef       	ldi	r24, 0xF2	; 242
  9a:	81 bb       	out	0x11, r24	; 17
	UCSRA=0X00;
  9c:	1b b8       	out	0x0b, r1	; 11
	UCSRB=0X18;
  9e:	88 e1       	ldi	r24, 0x18	; 24
  a0:	8a b9       	out	0x0a, r24	; 10
	UCSRC=0X06;
  a2:	86 e0       	ldi	r24, 0x06	; 6
  a4:	80 bd       	out	0x20, r24	; 32
	UBRRL=0X33;
  a6:	83 e3       	ldi	r24, 0x33	; 51
  a8:	89 b9       	out	0x09, r24	; 9
	UBRRH=0X00;
  aa:	10 bc       	out	0x20, r1	; 32
	_delay_ms(500);
}

void cmd(int c)
{
	PORTB=c;
  ac:	88 e3       	ldi	r24, 0x38	; 56
  ae:	88 bb       	out	0x18, r24	; 24
	PORTD=0X40;
  b0:	80 e4       	ldi	r24, 0x40	; 64
  b2:	82 bb       	out	0x12, r24	; 18
  b4:	88 e8       	ldi	r24, 0x88	; 136
  b6:	93 e1       	ldi	r25, 0x13	; 19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  b8:	29 e1       	ldi	r18, 0x19	; 25
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	f9 01       	movw	r30, r18
  be:	31 97       	sbiw	r30, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <main+0x2c>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  c2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  c4:	d9 f7       	brne	.-10     	; 0xbc <main+0x2a>
	_delay_ms(500);
	PORTD=0X00;
  c6:	12 ba       	out	0x12, r1	; 18
	_delay_ms(500);
}

void cmd(int c)
{
	PORTB=c;
  c8:	80 e8       	ldi	r24, 0x80	; 128
  ca:	88 bb       	out	0x18, r24	; 24
	PORTD=0X40;
  cc:	80 e4       	ldi	r24, 0x40	; 64
  ce:	82 bb       	out	0x12, r24	; 18
  d0:	88 e8       	ldi	r24, 0x88	; 136
  d2:	93 e1       	ldi	r25, 0x13	; 19
  d4:	29 e1       	ldi	r18, 0x19	; 25
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	f9 01       	movw	r30, r18
  da:	31 97       	sbiw	r30, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <main+0x48>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  de:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  e0:	d9 f7       	brne	.-10     	; 0xd8 <main+0x46>
	_delay_ms(500);
	PORTD=0X00;
  e2:	12 ba       	out	0x12, r1	; 18
	_delay_ms(500);
}

void cmd(int c)
{
	PORTB=c;
  e4:	86 e0       	ldi	r24, 0x06	; 6
  e6:	88 bb       	out	0x18, r24	; 24
	PORTD=0X40;
  e8:	80 e4       	ldi	r24, 0x40	; 64
  ea:	82 bb       	out	0x12, r24	; 18
  ec:	88 e8       	ldi	r24, 0x88	; 136
  ee:	93 e1       	ldi	r25, 0x13	; 19
  f0:	29 e1       	ldi	r18, 0x19	; 25
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	f9 01       	movw	r30, r18
  f6:	31 97       	sbiw	r30, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <main+0x64>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  fa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  fc:	d9 f7       	brne	.-10     	; 0xf4 <main+0x62>
	_delay_ms(500);
	PORTD=0X00;
  fe:	12 ba       	out	0x12, r1	; 18
	_delay_ms(500);
}

void cmd(int c)
{
	PORTB=c;
 100:	8e e0       	ldi	r24, 0x0E	; 14
 102:	88 bb       	out	0x18, r24	; 24
	PORTD=0X40;
 104:	80 e4       	ldi	r24, 0x40	; 64
 106:	82 bb       	out	0x12, r24	; 18
 108:	88 e8       	ldi	r24, 0x88	; 136
 10a:	93 e1       	ldi	r25, 0x13	; 19
 10c:	29 e1       	ldi	r18, 0x19	; 25
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	f9 01       	movw	r30, r18
 112:	31 97       	sbiw	r30, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <main+0x80>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 116:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 118:	d9 f7       	brne	.-10     	; 0x110 <main+0x7e>
	_delay_ms(500);
	PORTD=0X00;
 11a:	12 ba       	out	0x12, r1	; 18
	_delay_ms(500);
}

void cmd(int c)
{
	PORTB=c;
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	88 bb       	out	0x18, r24	; 24
	PORTD=0X40;
 120:	80 e4       	ldi	r24, 0x40	; 64
 122:	82 bb       	out	0x12, r24	; 18
 124:	88 e8       	ldi	r24, 0x88	; 136
 126:	93 e1       	ldi	r25, 0x13	; 19
 128:	29 e1       	ldi	r18, 0x19	; 25
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	f9 01       	movw	r30, r18
 12e:	31 97       	sbiw	r30, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <main+0x9c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 132:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 134:	d9 f7       	brne	.-10     	; 0x12c <main+0x9a>
	_delay_ms(500);
	PORTD=0X00;
 136:	12 ba       	out	0x12, r1	; 18
}

void data(char d)
{
	PORTB=d;
	PORTD=0X60;
 138:	60 e6       	ldi	r22, 0x60	; 96
 13a:	49 e1       	ldi	r20, 0x19	; 25
 13c:	50 e0       	ldi	r21, 0x00	; 0
	_delay_ms(500);
	PORTD=0X20;
 13e:	30 e2       	ldi	r19, 0x20	; 32
	}
}

char rec()
{
	while((UCSRA&0X80)==0);
 140:	5f 9b       	sbis	0x0b, 7	; 11
 142:	fe cf       	rjmp	.-4      	; 0x140 <main+0xae>
	return(UDR);
 144:	2c b1       	in	r18, 0x0c	; 12
	PORTD=0X00;
}

void data(char d)
{
	PORTB=d;
 146:	28 bb       	out	0x18, r18	; 24
	PORTD=0X60;
 148:	62 bb       	out	0x12, r22	; 18
 14a:	88 e8       	ldi	r24, 0x88	; 136
 14c:	93 e1       	ldi	r25, 0x13	; 19
 14e:	fa 01       	movw	r30, r20
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <main+0xbe>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 154:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 156:	d9 f7       	brne	.-10     	; 0x14e <main+0xbc>
	_delay_ms(500);
	PORTD=0X20;
 158:	32 bb       	out	0x12, r19	; 18
	return(UDR);
}

void trans(char b)
{
	UDR=b;
 15a:	2c b9       	out	0x0c, r18	; 12
	while((UCSRA&0X40)==0);
 15c:	5e 9b       	sbis	0x0b, 6	; 11
 15e:	fe cf       	rjmp	.-4      	; 0x15c <main+0xca>
 160:	88 e8       	ldi	r24, 0x88	; 136
 162:	93 e1       	ldi	r25, 0x13	; 19
 164:	fa 01       	movw	r30, r20
 166:	31 97       	sbiw	r30, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <main+0xd4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 16a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 16c:	d9 f7       	brne	.-10     	; 0x164 <main+0xd2>
 16e:	e8 cf       	rjmp	.-48     	; 0x140 <main+0xae>

00000170 <rec>:
		trans(a);
	}
}

char rec()
{
 170:	5f 9b       	sbis	0x0b, 7	; 11
 172:	fe cf       	rjmp	.-4      	; 0x170 <rec>
	while((UCSRA&0X80)==0);
	return(UDR);
 174:	8c b1       	in	r24, 0x0c	; 12
}
 176:	08 95       	ret

00000178 <trans>:

void trans(char b)
{
 178:	8c b9       	out	0x0c, r24	; 12
	UDR=b;
	while((UCSRA&0X40)==0);
 17a:	5e 9b       	sbis	0x0b, 6	; 11
 17c:	fe cf       	rjmp	.-4      	; 0x17a <trans+0x2>
 17e:	88 e8       	ldi	r24, 0x88	; 136
 180:	93 e1       	ldi	r25, 0x13	; 19
 182:	29 e1       	ldi	r18, 0x19	; 25
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	f9 01       	movw	r30, r18
 188:	31 97       	sbiw	r30, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <trans+0x10>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 18c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 18e:	d9 f7       	brne	.-10     	; 0x186 <trans+0xe>
	_delay_ms(500);
}
 190:	08 95       	ret

00000192 <cmd>:

void cmd(int c)
{
 192:	88 bb       	out	0x18, r24	; 24
	PORTB=c;
	PORTD=0X40;
 194:	80 e4       	ldi	r24, 0x40	; 64
 196:	82 bb       	out	0x12, r24	; 18
 198:	88 e8       	ldi	r24, 0x88	; 136
 19a:	93 e1       	ldi	r25, 0x13	; 19
 19c:	29 e1       	ldi	r18, 0x19	; 25
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	f9 01       	movw	r30, r18
 1a2:	31 97       	sbiw	r30, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <cmd+0x10>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1a6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1a8:	d9 f7       	brne	.-10     	; 0x1a0 <cmd+0xe>
	_delay_ms(500);
	PORTD=0X00;
 1aa:	12 ba       	out	0x12, r1	; 18
}
 1ac:	08 95       	ret

000001ae <data>:

void data(char d)
{
 1ae:	88 bb       	out	0x18, r24	; 24
	PORTB=d;
	PORTD=0X60;
 1b0:	80 e6       	ldi	r24, 0x60	; 96
 1b2:	82 bb       	out	0x12, r24	; 18
 1b4:	88 e8       	ldi	r24, 0x88	; 136
 1b6:	93 e1       	ldi	r25, 0x13	; 19
 1b8:	29 e1       	ldi	r18, 0x19	; 25
 1ba:	30 e0       	ldi	r19, 0x00	; 0
 1bc:	f9 01       	movw	r30, r18
 1be:	31 97       	sbiw	r30, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <data+0x10>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1c2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1c4:	d9 f7       	brne	.-10     	; 0x1bc <data+0xe>
	_delay_ms(500);
	PORTD=0X20;
 1c6:	80 e2       	ldi	r24, 0x20	; 32
 1c8:	82 bb       	out	0x12, r24	; 18
}
 1ca:	08 95       	ret

000001cc <_exit>:
 1cc:	f8 94       	cli

000001ce <__stop_program>:
 1ce:	ff cf       	rjmp	.-2      	; 0x1ce <__stop_program>
