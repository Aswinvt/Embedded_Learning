     1: #include<pic.h>
     2: void cmd(int);
     3: void data(char);
     4: void display(const char *);
     5: char key();
     6: void delay();
     7: void main()
     8: {
     9:         char a[4]="1234",b[4];
    10:         int i,c=0;
    11:         TRISC=0X00;
    12:         TRISD=0X00;
    13:         TRISB=0X0F;
    14:         cmd(0X38);
    15:         cmd(0X80);
    16:         cmd(0X01);
    17:         cmd(0X06);
    18:         cmd(0X0E);
    19: 
    20:          for(i=0;i<4;i++)
    21:         {
    22:                 b[i]=key();
    23:                 data(b[i]);
    24:         }
    25:         for(i=0;i<4;i++)
    26:         {
    27:                 if(a[i]==b[i])
    28:                 {
    29:                         c++;
    30:                 }
    31:         }
    32:         if(c==4)
    33:         {
    34:                 cmd(0X01);
    35:                 display("Access Granted");
    36:         }
    37:         else
    38:         {
    39:                 cmd(0X01);
    40:                 display("Wrong");
    41:         }
    42: }
    43: char key()
    44: {
    45:                 int e;
    46:                 while(1)
    47:                 {
    48:                         PORTB=0X7F;
    49:                         e=PORTB&0X0F;
    50:                         switch(e)
    51:                                 {
    52:                                         case 0X07:
    53:                                         return('1');
    54: 
    55:                                         case 0X0B:
    56:                                 return('2');
    57: 
    58:                                         case 0X0D:
    59:                                         return('3');
    60: 
    61:                                         case 0X0E:
    62:                                         return('4');
    63:                                 }
    64:                         PORTB=0XBF;
    65:                         e=PORTB&0X0F;
    66:                         switch(e)
    67:                         {
    68:                                 case 0X07:
    69:                                 return('5');
    70: 
    71:                                 case 0X0B:
    72:                                 return('6');
    73: 
    74:                                 case 0X0D:
    75:                                 return('7');
    76: 
    77:                                 case 0X0E:
    78:                                 return('8');
    79:                         }
    80:                 PORTB=0XDF;
    81:                 e=PORTB&0X0F;
    82:                 switch(e)
    83:                 {
    84:                         case 0X07:
    85:                         return('9');
    86: 
    87:                         case 0X0B:
    88:                         return('0');
    89: 
    90:                         case 0X0D:
    91:                         return('*');
    92: 
    93:                         case 0X0E:
    94:                         return('#');
    95:                 }
    96:                 PORTB=0XEF;
    97:                 e=PORTB&0X0F;
    98:                 switch(e)
    99:                 {
   100:                         case 0X07:
   101:                         return('A');
   102: 
   103:                         case 0X0B:
   104:                         return('B');
   105: 
   106:                         case 0X0D:
   107:                         return('C');
   108: 
   109:                         case 0X0E:
   110:                         return('D');
   111:                 }
   112:         }
   113: }  
   114: 
   115: void cmd(int a)
   116: {
   117:         PORTD=a;
   118:         RC0=0;
   119:         RC1=1;
   120:         delay();
   121:         RC1=0;
   122: }
   123: 
   124: void data(char b)
   125: {
   126:         PORTD=b;
   127:         RC0=1;
   128:         RC1=1;
   129:         delay();
   130:         RC1=0;
   131: }
   132: 
   133: void display(const char *p)
   134: {
   135:         while(*p!='\0')
   136:         {
   137:                 data(*p);
   138:                 p++;
   139:         }
   140: }
   141: 
   142: void delay()
   143: {
   144:         int i,j;
   145:         for(i=0;i<500;i++)
   146:         for(j=0;j<500;j++);
   147: }
